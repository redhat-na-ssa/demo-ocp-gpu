name: Publish Build

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

on:  # yamllint disable-line rule:truthy
  # schedule:
  #   - cron: '5 4 * * 6'
  push:
    branches: ["*"]
    # Publish semver tags as releases.
    # tags: ["v*.*.*"]
    paths: ["containers/udi-cuda/**"]
  pull_request:
    branches: ["main"]
    paths: ["containers/udi-cuda/**"]

env:
  IMAGE_NAME: udi-cuda
  IMAGE_VERSION: 12.2.0
  GHCR_REGISTRY: ghcr.io
  GHCR_USER: ${{ github.repository_owner }}
  GHCR_IMAGE: ${GHCR_REGISTRY}/${GHCR_USER}/${IMAGE_NAME}


jobs:
  publish:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4.1.0

      - name: Prepare
        id: prep
        run: |
          #VERSION=${GITHUB_REF#refs/tags/v}
          VERSION=${{ env.IMAGE_VERSION }}
          MINOR=${VERSION%.*}
          MAJOR=${VERSION%%.*}
          GHCR_IMAGE=${{ env.GHCR_IMAGE }}
          TAGS="${TAGS},${GHCR_IMAGE}:${MAJOR},${GHCR_IMAGE}:${MINOR}"
          TAGS="${TAGS},${GHCR_IMAGE}:${VERSION},${GHCR_IMAGE}:latest"
          echo ::set-output name=name::${{ env.IMAGE_NAME }}
          echo ::set-output name=tags::${TAGS}
          echo ::set-output name=version::${VERSION}
          echo ::set-output name=ghcr_image::${GHCR_IMAGE}

      # https://github.com/docker/login-action
      - name: Log into GitHub Container Registry
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3.0.0
        with:
          registry: ${{ env.GHCR_REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # https://github.com/docker/metadata-action
      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@96383f45573cb7f253c731d3b3ab81c87ef81934 # v5.0.0
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      # https://github.com/docker/build-push-action
      - name: Build base
        uses: docker/build-push-action@v5.0.0
        with:
          context: containers/${{ steps.prep.outputs.name }}/12.2.0/ubi8/base
          file: containers/${{ steps.prep.outputs.name }}/12.2.0/ubi8/base/Dockerfile
          push: ${{ github.event_name != 'pull_request' }}
          tags: 12.2.0-base-ubi8
          labels: org.opencontainers.image.version=12.2.0-base-ubi8

      # https://github.com/docker/build-push-action
      - name: Build runtime
        uses: docker/build-push-action@v5.0.0
        with:
          context: containers/${{ steps.prep.outputs.name }}/12.2.0/ubi8/runtime
          file: containers/${{ steps.prep.outputs.name }}/12.2.0/ubi8/runtime/Dockerfile
          push: ${{ github.event_name != 'pull_request' }}
          tags: 12.2.0-runtime-ubi8
          labels: org.opencontainers.image.version=12.2.0-runtime-ubi8

              # https://github.com/docker/build-push-action
      - name: Build and push devel
        uses: docker/build-push-action@v5.0.0
        with:
          context: containers/${{ steps.prep.outputs.name }}/12.2.0/ubi8/devel
          file: containers/${{ steps.prep.outputs.name }}/12.2.0/ubi8/devel/Dockerfile
          push: ${{ github.event_name != 'pull_request' }}
          tags: 12.2.0-devel-ubi8
          labels: org.opencontainers.image.version=12.2.0-devel-ubi8
